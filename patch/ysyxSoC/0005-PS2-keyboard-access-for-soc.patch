From 7478815a14e8efe8c9db57426550626097836d3a Mon Sep 17 00:00:00 2001
From: CmdBlock <CmdBlockZQG@outlook.com>
Date: Thu, 25 Apr 2024 18:36:26 +0800
Subject: [PATCH 05/13] PS2 keyboard access for soc

---
 perip/ps2/ps2_top_apb.v | 53 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 53 insertions(+)

diff --git a/perip/ps2/ps2_top_apb.v b/perip/ps2/ps2_top_apb.v
index 080d38fa7..d89f99743 100644
--- a/perip/ps2/ps2_top_apb.v
+++ b/perip/ps2/ps2_top_apb.v
@@ -15,5 +15,58 @@ module ps2_top_apb(
   input         ps2_clk,
   input         ps2_data
 );
+  // -------------------- APB --------------------
+  assign in_pready = 1;
+  assign in_pslverr = overflow;
+  assign in_prdata = {24'b0, available ? buffer[r_ptr] : 8'b0};
+  wire read_en = in_psel & in_penable & ~in_pwrite;
 
+  always @(posedge clock) if (~reset & available & read_en) begin
+    r_ptr <= r_ptr + 3'b001;
+    if (w_ptr == r_ptr + 3'b001) begin
+      if (sample & receive_valid_key) begin end
+      else available <= 0;
+    end
+  end
+
+  // -------------------- PS2 --------------------
+  reg [2:0] ps2_clk_sync;
+  always @(posedge clock) begin
+    ps2_clk_sync <= {ps2_clk_sync[1:0], ps2_clk};
+  end
+  wire sample = ps2_clk_sync[2] & ~ps2_clk_sync[1];
+
+  reg available, overflow;
+
+  reg [9:0] frame;
+  reg [3:0] count;
+
+  reg [7:0] buffer [8];
+  reg [2:0] r_ptr, w_ptr;
+
+  always @(posedge clock) if (reset) begin
+    count <= 0;
+    r_ptr <= 0;
+    w_ptr <= 0;
+    available <= 0;
+    overflow <= 0;
+  end
+
+  wire receive_valid_key = count == 4'd10 && frame[0] == 0 && ps2_data && ^frame[9:1];
+
+  always @(posedge clock) if (~reset & sample) begin
+    if (receive_valid_key) begin
+      buffer[w_ptr] <= frame[8:1];
+      w_ptr <= w_ptr + 1;
+      available <= 1;
+      overflow <= overflow | (r_ptr == w_ptr + 3'b001);
+    end
+
+    if (count == 4'd10) begin
+      count <= 0;
+    end else begin
+      frame[count] <= ps2_data;
+      count <= count + 4'b0001;
+    end
+  end
 endmodule
-- 
2.50.1

