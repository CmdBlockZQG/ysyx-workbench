From e0d423267d7e7376a50116fc72f0e5bc6f0d4928 Mon Sep 17 00:00:00 2001
From: CmdBlock <54425466+CmdBlockZQG@users.noreply.github.com>
Date: Wed, 3 Jul 2024 20:59:12 +0800
Subject: [PATCH 08/13] AXI SDRAM controller

---
 perip/amba/apb_delayer.v                      |  2 +-
 perip/amba/axi4_data_width_converter_64to32.v | 63 +++++++++++++++++++
 perip/sdram/core_sdram_axi4/sdram_axi_pmem.v  | 11 ++--
 src/Top.scala                                 |  2 +-
 4 files changed, 72 insertions(+), 6 deletions(-)

diff --git a/perip/amba/apb_delayer.v b/perip/amba/apb_delayer.v
index 3c552a12b..a2ce98feb 100644
--- a/perip/amba/apb_delayer.v
+++ b/perip/amba/apb_delayer.v
@@ -38,7 +38,7 @@ module apb_delayer(
   assign out_penable = in_penable & out_psel;
 
   reg [31:0] cnt;
-  parameter RATIO = 32'h7;
+  parameter RATIO = 32'h4;
 
   always @(posedge clock) if (reset) begin
     state <= st_idle;
diff --git a/perip/amba/axi4_data_width_converter_64to32.v b/perip/amba/axi4_data_width_converter_64to32.v
index dd24cdba3..3b19e57bc 100644
--- a/perip/amba/axi4_data_width_converter_64to32.v
+++ b/perip/amba/axi4_data_width_converter_64to32.v
@@ -62,5 +62,68 @@ module AXI4DataWidthConverter64to32(
   input  [3:0]  out_bid,
   input  [1:0]  out_bresp
 );
+  assign in_arready = out_arready;
+  assign out_arvalid = in_arvalid;
+  assign out_arid = in_arid;
+  assign out_araddr = in_araddr;
+  assign out_arlen = in_arlen;
+  assign out_arsize = in_arsize;
+  assign out_arburst = in_arburst;
+  assign out_rready = in_rready;
+  assign in_rvalid = out_rvalid;
+  assign in_rid = out_rid;
+  assign in_rdata = {out_rdata, out_rdata};
+  assign in_rresp = out_rresp;
+  assign in_rlast = out_rlast;
 
+  // write
+  reg waddr_align_reg, waddr_align_reg_valid;
+  wire waddr_align = in_awvalid ? in_awaddr[2] : waddr_align_reg;
+  wire waddr_align_valid = in_awvalid | waddr_align_reg_valid;
+
+  reg wdata_reg_valid;
+  reg [63:0] wdata_reg;
+  reg [7:0] wstrb_reg;
+  wire [63:0] wdata = in_wvalid ? in_wdata : wdata_reg;
+  wire [7:0] wstrb = in_wvalid ? in_wstrb : wstrb_reg;
+  wire wdata_valid = in_wvalid | wdata_reg_valid;
+
+  assign in_wready = ~wdata_reg_valid;
+  assign out_wvalid = wdata_valid & waddr_align_valid;
+  assign out_wdata = waddr_align ? wdata[63:32] : wdata[31:0];
+  assign out_wstrb = waddr_align ? wstrb[7:4] : wstrb[3:0];
+
+  always @(posedge clock) if (reset) begin
+    waddr_align_reg_valid <= 0;
+    wdata_reg_valid <= 0;
+  end else begin
+    if (in_awvalid & in_awready) begin
+      waddr_align_reg <= in_awaddr[2];
+      waddr_align_reg_valid <= 1;
+    end
+    if (in_wvalid & in_wready) begin
+      wdata_reg_valid <= 1;
+      wdata_reg <= in_wdata;
+      wstrb_reg <= in_wstrb;
+    end
+    if (out_wvalid & out_wready) begin
+      wdata_reg_valid <= 0;
+      waddr_align_reg_valid <= 0;
+    end
+    // if (out_bvalid & out_bready) begin
+    // end
+  end
+
+  assign in_awready = out_awready;
+  assign out_awvalid = in_awvalid;
+  assign out_awid = in_awid;
+  assign out_awaddr = in_awaddr;
+  assign out_awlen = in_awlen;
+  assign out_awsize = in_awsize;
+  assign out_awburst = in_awburst;
+  assign out_wlast = in_wlast;
+  assign out_bready = in_bready;
+  assign in_bvalid = out_bvalid;
+  assign in_bid = out_bid;
+  assign in_bresp = out_bresp;
 endmodule
diff --git a/perip/sdram/core_sdram_axi4/sdram_axi_pmem.v b/perip/sdram/core_sdram_axi4/sdram_axi_pmem.v
index 3d6a5bb40..853e26f09 100644
--- a/perip/sdram/core_sdram_axi4/sdram_axi_pmem.v
+++ b/perip/sdram/core_sdram_axi4/sdram_axi_pmem.v
@@ -349,7 +349,7 @@ module sdram_axi_pmem_fifo2
 //-----------------------------------------------------------------
 #(
     parameter WIDTH   = 8,
-    parameter DEPTH   = 4,
+    parameter DEPTH   = 1, // 4
     parameter ADDR_W  = 2
 )
 //-----------------------------------------------------------------
@@ -377,7 +377,8 @@ localparam COUNT_W = ADDR_W + 1;
 //-----------------------------------------------------------------
 // Registers
 //-----------------------------------------------------------------
-reg [WIDTH-1:0]         ram [DEPTH-1:0];
+// reg [WIDTH-1:0]         ram [DEPTH-1:0];
+reg [WIDTH-1:0]         ram;
 reg [ADDR_W-1:0]        rd_ptr;
 reg [ADDR_W-1:0]        wr_ptr;
 reg [COUNT_W-1:0]       count;
@@ -397,7 +398,8 @@ begin
     // Push
     if (push_i & accept_o)
     begin
-        ram[wr_ptr] <= data_in_i;
+        // ram[wr_ptr] <= data_in_i;
+        ram         <= data_in_i;
         wr_ptr      <= wr_ptr + 1;
     end
 
@@ -421,7 +423,8 @@ assign accept_o   = (count != DEPTH);
 assign valid_o    = (count != 0);
 /* verilator lint_on WIDTH */
 
-assign data_out_o = ram[rd_ptr];
+assign data_out_o = ram;
+// assign data_out_o = ram[rd_ptr];
 
 
 
diff --git a/src/Top.scala b/src/Top.scala
index 4d5622163..c96125335 100644
--- a/src/Top.scala
+++ b/src/Top.scala
@@ -7,7 +7,7 @@ import freechips.rocketchip.diplomacy.LazyModule
 
 object Config {
   def hasChipLink: Boolean = false
-  def sdramUseAXI: Boolean = false
+  def sdramUseAXI: Boolean = true
 }
 
 class ysyxSoCTop extends Module {
-- 
2.50.1

