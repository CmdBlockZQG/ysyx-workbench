From dffe06ce3731959e988dbc03effaf2c49824ed4e Mon Sep 17 00:00:00 2001
From: CmdBlock <CmdBlockZQG@outlook.com>
Date: Thu, 9 May 2024 22:49:21 +0800
Subject: [PATCH 07/13] calibrate memory delay

---
 perip/amba/apb_delayer.v    | 62 ++++++++++++++++++++++++++++++-------
 perip/spi/rtl/spi_top_apb.v |  2 +-
 2 files changed, 52 insertions(+), 12 deletions(-)

diff --git a/perip/amba/apb_delayer.v b/perip/amba/apb_delayer.v
index c0d207643..3c552a12b 100644
--- a/perip/amba/apb_delayer.v
+++ b/perip/amba/apb_delayer.v
@@ -8,9 +8,9 @@ module apb_delayer(
   input         in_pwrite,
   input  [31:0] in_pwdata,
   input  [3:0]  in_pstrb,
-  output        in_pready,
-  output [31:0] in_prdata,
-  output        in_pslverr,
+  output reg        in_pready,
+  output reg [31:0] in_prdata,
+  output reg        in_pslverr,
 
   output [31:0] out_paddr,
   output        out_psel,
@@ -24,15 +24,55 @@ module apb_delayer(
   input         out_pslverr
 );
 
-  assign out_paddr   = in_paddr;
-  assign out_psel    = in_psel;
-  assign out_penable = in_penable;
-  assign out_pprot   = in_pprot;
-  assign out_pwrite  = in_pwrite;
+  typedef enum { st_idle, st_access, st_delay } state_t;
+  state_t state;
+
+  assign out_paddr = in_paddr;
+  assign out_pprot = in_pprot;
+  assign out_pwrite = in_pwrite;
   assign out_pwdata  = in_pwdata;
   assign out_pstrb   = in_pstrb;
-  assign in_pready   = out_pready;
-  assign in_prdata   = out_prdata;
-  assign in_pslverr  = out_pslverr;
+
+  reg sel;
+  assign out_psel = sel & in_psel;
+  assign out_penable = in_penable & out_psel;
+
+  reg [31:0] cnt;
+  parameter RATIO = 32'h7;
+
+  always @(posedge clock) if (reset) begin
+    state <= st_idle;
+    sel <= 1;
+    in_pready <= 0;
+    in_pslverr <= 0;
+    cnt <= 0;
+  end else case (state)
+    st_idle: begin
+      cnt <= 0;
+      if (in_pready) begin
+        in_pready <= 0;
+        sel <= 1;
+      end else if (in_psel) begin
+        state <= st_access;
+      end
+    end
+    st_access: begin
+      cnt <= cnt + RATIO - 1;
+      if (out_pready) begin
+        in_prdata <= out_prdata;
+        in_pslverr <= out_pslverr;
+        sel <= 0;
+        state <= st_delay;
+      end
+    end
+    st_delay: begin
+      cnt <= cnt - 1;
+      if (cnt == 2) begin
+        in_pready <= 1;
+        state <= st_idle;
+      end
+    end
+    default: begin end
+  endcase
 
 endmodule
diff --git a/perip/spi/rtl/spi_top_apb.v b/perip/spi/rtl/spi_top_apb.v
index 335b1a542..496596648 100644
--- a/perip/spi/rtl/spi_top_apb.v
+++ b/perip/spi/rtl/spi_top_apb.v
@@ -1,6 +1,6 @@
 // define this macro to enable fast behavior simulation
 // for flash by skipping SPI transfers
-`define FAST_FLASH
+// `define FAST_FLASH
 
 module spi_top_apb #(
   parameter flash_addr_start = 32'h30000000,
-- 
2.50.1

