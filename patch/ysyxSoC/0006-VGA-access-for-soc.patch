From 76cb2845107238e1c025cbad8a15ecc60e38bcec Mon Sep 17 00:00:00 2001
From: CmdBlock <CmdBlockZQG@outlook.com>
Date: Fri, 26 Apr 2024 01:09:17 +0800
Subject: [PATCH 06/13] VGA access for soc

---
 perip/vga/vga_top_apb.v | 48 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)

diff --git a/perip/vga/vga_top_apb.v b/perip/vga/vga_top_apb.v
index 5c74cfbe7..fb36bb64f 100644
--- a/perip/vga/vga_top_apb.v
+++ b/perip/vga/vga_top_apb.v
@@ -19,5 +19,53 @@ module vga_top_apb(
   output        vga_vsync,
   output        vga_valid
 );
+  // -------------------- APB VRAM --------------------
+  reg [31:0] vram [640 * 480];
+  assign in_pready = 1;
+  assign in_pslverr = 0;
+  assign in_prdata = 0;
+  wire write_en = in_psel & in_penable & in_pwrite;
+  always @(posedge clock) if (~reset & write_en) begin
+    vram[in_paddr[20:2]] <= in_pwdata;
+  end
 
+  // -------------------- VGA Controller --------------------
+  parameter    h_frontporch = 96;
+  parameter    h_active = 144;
+  parameter    h_backporch = 784;
+  parameter    h_total = 800;
+
+  parameter    v_frontporch = 2;
+  parameter    v_active = 35;
+  parameter    v_backporch = 515;
+  parameter    v_total = 525;
+
+  reg [9:0] x_cnt;
+  reg [9:0] y_cnt;
+  always @(posedge clock) if (reset) begin
+    x_cnt <= 1;
+    y_cnt <= 1;
+  end
+  always @(posedge clock) if (~reset) begin
+    if (x_cnt == h_total) begin
+      x_cnt <= 1;
+      if (y_cnt == v_total) y_cnt <= 1;
+      else y_cnt <= y_cnt + 1;
+    end else x_cnt <= x_cnt + 1;
+  end
+
+  // sync signal
+  assign vga_hsync = (x_cnt > h_frontporch);
+  assign vga_vsync = (y_cnt > v_frontporch);
+  // valid signal
+  wire h_valid = (x_cnt > h_active) & (x_cnt <= h_backporch);
+  wire v_valid = (y_cnt > v_active) & (y_cnt <= v_backporch);
+  assign vga_valid = h_valid & v_valid;
+  // pixel color
+  wire [9:0] h_addr = h_valid ? (x_cnt - 10'd145) : 10'd0;
+  wire [9:0] v_addr = v_valid ? (y_cnt - 10'd36) : 10'd0;
+  wire [31:0] pixel = vram[v_addr * 640 + h_addr];
+  assign vga_r = pixel[23:16];
+  assign vga_g = pixel[15:8];
+  assign vga_b = pixel[7:0];
 endmodule
-- 
2.50.1

