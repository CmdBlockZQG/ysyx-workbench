From 1c4e93bdb86c838deebc3314943f5a93d582e11f Mon Sep 17 00:00:00 2001
From: CmdBlock <54425466+CmdBlockZQG@users.noreply.github.com>
Date: Sat, 27 Jul 2024 16:05:41 +0800
Subject: [PATCH 12/13] Delete axi4_data_width_converter_64to32.v

---
 perip/amba/apb_delayer.v                      |   2 +-
 perip/amba/axi4_data_width_converter_64to32.v | 129 ------------------
 perip/amba/axi4_delayer.v                     |   2 +-
 3 files changed, 2 insertions(+), 131 deletions(-)
 delete mode 100644 perip/amba/axi4_data_width_converter_64to32.v

diff --git a/perip/amba/apb_delayer.v b/perip/amba/apb_delayer.v
index 090046484..45a140ff5 100644
--- a/perip/amba/apb_delayer.v
+++ b/perip/amba/apb_delayer.v
@@ -24,7 +24,7 @@ module apb_delayer(
   input         out_pslverr
 );
 
-// `define APB_DELAY_EN
+`define APB_DELAY_EN
 
 `ifdef APB_DELAY_EN
 
diff --git a/perip/amba/axi4_data_width_converter_64to32.v b/perip/amba/axi4_data_width_converter_64to32.v
deleted file mode 100644
index 3b19e57bc..000000000
--- a/perip/amba/axi4_data_width_converter_64to32.v
+++ /dev/null
@@ -1,129 +0,0 @@
-module AXI4DataWidthConverter64to32(
-  input         clock,
-  input         reset,
-
-  output        in_arready,
-  input         in_arvalid,
-  input  [3:0]  in_arid,
-  input  [31:0] in_araddr,
-  input  [7:0]  in_arlen,
-  input  [2:0]  in_arsize,
-  input  [1:0]  in_arburst,
-  input         in_rready,
-  output        in_rvalid,
-  output [3:0]  in_rid,
-  output [63:0] in_rdata,
-  output [1:0]  in_rresp,
-  output        in_rlast,
-  output        in_awready,
-  input         in_awvalid,
-  input  [3:0]  in_awid,
-  input  [31:0] in_awaddr,
-  input  [7:0]  in_awlen,
-  input  [2:0]  in_awsize,
-  input  [1:0]  in_awburst,
-  output        in_wready,
-  input         in_wvalid,
-  input  [63:0] in_wdata,
-  input  [7:0]  in_wstrb,
-  input         in_wlast,
-                in_bready,
-  output        in_bvalid,
-  output [3:0]  in_bid,
-  output [1:0]  in_bresp,
-
-  input         out_arready,
-  output        out_arvalid,
-  output [3:0]  out_arid,
-  output [31:0] out_araddr,
-  output [7:0]  out_arlen,
-  output [2:0]  out_arsize,
-  output [1:0]  out_arburst,
-  output        out_rready,
-  input         out_rvalid,
-  input  [3:0]  out_rid,
-  input  [31:0] out_rdata,
-  input  [1:0]  out_rresp,
-  input         out_rlast,
-  input         out_awready,
-  output        out_awvalid,
-  output [3:0]  out_awid,
-  output [31:0] out_awaddr,
-  output [7:0]  out_awlen,
-  output [2:0]  out_awsize,
-  output [1:0]  out_awburst,
-  input         out_wready,
-  output        out_wvalid,
-  output [31:0] out_wdata,
-  output [3:0]  out_wstrb,
-  output        out_wlast,
-                out_bready,
-  input         out_bvalid,
-  input  [3:0]  out_bid,
-  input  [1:0]  out_bresp
-);
-  assign in_arready = out_arready;
-  assign out_arvalid = in_arvalid;
-  assign out_arid = in_arid;
-  assign out_araddr = in_araddr;
-  assign out_arlen = in_arlen;
-  assign out_arsize = in_arsize;
-  assign out_arburst = in_arburst;
-  assign out_rready = in_rready;
-  assign in_rvalid = out_rvalid;
-  assign in_rid = out_rid;
-  assign in_rdata = {out_rdata, out_rdata};
-  assign in_rresp = out_rresp;
-  assign in_rlast = out_rlast;
-
-  // write
-  reg waddr_align_reg, waddr_align_reg_valid;
-  wire waddr_align = in_awvalid ? in_awaddr[2] : waddr_align_reg;
-  wire waddr_align_valid = in_awvalid | waddr_align_reg_valid;
-
-  reg wdata_reg_valid;
-  reg [63:0] wdata_reg;
-  reg [7:0] wstrb_reg;
-  wire [63:0] wdata = in_wvalid ? in_wdata : wdata_reg;
-  wire [7:0] wstrb = in_wvalid ? in_wstrb : wstrb_reg;
-  wire wdata_valid = in_wvalid | wdata_reg_valid;
-
-  assign in_wready = ~wdata_reg_valid;
-  assign out_wvalid = wdata_valid & waddr_align_valid;
-  assign out_wdata = waddr_align ? wdata[63:32] : wdata[31:0];
-  assign out_wstrb = waddr_align ? wstrb[7:4] : wstrb[3:0];
-
-  always @(posedge clock) if (reset) begin
-    waddr_align_reg_valid <= 0;
-    wdata_reg_valid <= 0;
-  end else begin
-    if (in_awvalid & in_awready) begin
-      waddr_align_reg <= in_awaddr[2];
-      waddr_align_reg_valid <= 1;
-    end
-    if (in_wvalid & in_wready) begin
-      wdata_reg_valid <= 1;
-      wdata_reg <= in_wdata;
-      wstrb_reg <= in_wstrb;
-    end
-    if (out_wvalid & out_wready) begin
-      wdata_reg_valid <= 0;
-      waddr_align_reg_valid <= 0;
-    end
-    // if (out_bvalid & out_bready) begin
-    // end
-  end
-
-  assign in_awready = out_awready;
-  assign out_awvalid = in_awvalid;
-  assign out_awid = in_awid;
-  assign out_awaddr = in_awaddr;
-  assign out_awlen = in_awlen;
-  assign out_awsize = in_awsize;
-  assign out_awburst = in_awburst;
-  assign out_wlast = in_wlast;
-  assign out_bready = in_bready;
-  assign in_bvalid = out_bvalid;
-  assign in_bid = out_bid;
-  assign in_bresp = out_bresp;
-endmodule
diff --git a/perip/amba/axi4_delayer.v b/perip/amba/axi4_delayer.v
index 24685ea46..427a3940f 100644
--- a/perip/amba/axi4_delayer.v
+++ b/perip/amba/axi4_delayer.v
@@ -63,7 +63,7 @@ module axi4_delayer(
   input  [1:0]  out_bresp
 );
 
-// `define AXI_DELAY_EN
+`define AXI_DELAY_EN
 
 `ifdef AXI_DELAY_EN
 
-- 
2.50.1

